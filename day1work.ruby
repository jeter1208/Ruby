# 1. 把陣列 [1, 2, 3, 4, 5] 變成 [1, 3, 5, 7, 9]

list = [1, 2, 3, 4, 5]
p list.map { |i| i * 2 - 1 }
# .map對Array裡的每個元素「進行計算」，並收集成一個新的Array。

# 2. 把陣列 [1, 3, 4, 1, 7, nil, 7] 由小到大排序，並且移除 nil 以及重複的數字。
arr = [1, 3, 4, 1, 7, nil, 7]
# p arr.uniq
p arr.compact.uniq
# compact 可以把陣列中nil移除
# uniq 刪除重複的值


# 3. 印出 1 ~ 100 之間所有的單數

p [*1..100].select { |i| i.odd? }
# select挑選裡面的物件
# 從集合裡「篩選符合條件」的元素，並收集成一個新的集合。
# 同義詞：filter
# odd 奇數
# ? 問號結尾，都會回傳一個值來回答問問題(通常是true或false)

# 4. 計算 1 ~ 100 的總和

p [*1..100].reduce(0) { |acc, v| acc + v }
#reduce 對集合裡的每個元素「進行運算」，並將所有的運算結果歸納成一個「單一結果」。
# 同義詞：inject

# 5. 印出 5 個小於 100 且不重複的亂數

p [*1..99].sample(5)
#.sample 從範圍中選擇幾個隨機元素。


# 6. 陣列 a = [1, 2, 3, 1, 2, 1, 3, 1, 2, 3, 4, 5, 6]，請計算在陣列 a 中，每個數字出現的次數。
a = [1, 2, 3, 1, 2, 1, 3, 1, 2, 3, 4, 5, 6]
p a.count(1)
p a.count(2)
p a.count(3)
p a.count(4)
p a.count(5)
p a.count(6)
# count 返回陣列中元素的數量